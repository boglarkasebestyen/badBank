{"ast":null,"code":"import _slicedToArray from\"/Users/sebestyenboglarka/git/badBank/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{createContext,useState}from\"react\";import{jsx as _jsx}from\"react/jsx-runtime\";var MyContext=/*#__PURE__*/createContext();function MyContextProvider(_ref){var children=_ref.children;//from CREATE ACCOUNT COMPONENT\nvar _useState=useState(false),_useState2=_slicedToArray(_useState,2),successMessageVisible=_useState2[0],setSuccessMessageVisible=_useState2[1];var _useState3=useState(\"\"),_useState4=_slicedToArray(_useState3,2),name=_useState4[0],setName=_useState4[1];var _useState5=useState(\"\"),_useState6=_slicedToArray(_useState5,2),email=_useState6[0],setEmail=_useState6[1];var _useState7=useState(\"\"),_useState8=_slicedToArray(_useState7,2),password=_useState8[0],setPassword=_useState8[1];var _useState9=useState(\"\"),_useState10=_slicedToArray(_useState9,2),nameError=_useState10[0],setNameError=_useState10[1];var _useState11=useState(\"\"),_useState12=_slicedToArray(_useState11,2),emailError=_useState12[0],setEmailError=_useState12[1];var _useState13=useState(\"\"),_useState14=_slicedToArray(_useState13,2),passwError=_useState14[0],setPasswError=_useState14[1];var _useState15=useState([]),_useState16=_slicedToArray(_useState15,2),users=_useState16[0],setUsers=_useState16[1];var nameErrorStr=\"\";var emailErrorStr=\"\";var passwordErrorStr=\"\";//NO INPUT + ADDITIONAL VALIDATION\nvar validate=function validate(){setEmailError(\"\");setNameError(\"\");setPasswError(\"\");if(!email){emailErrorStr=\"Oops! Your email can't be blank.\";//additional: email length \n}else if(email.length==1){emailErrorStr=\"Email must be longer than that.\";}if(!name){nameErrorStr=\"Oops! Your name can't be blank.\";//additional: name length \n}else if(name.length<3){nameErrorStr=\"Name must be longer than that.\";}if(!password){passwordErrorStr=\"Oops! Your password can't be blank.\";}//validate if there's no error message \nif(nameErrorStr==\"\"){validateName(name);}if(emailErrorStr==\"\"){validateEmail(email);}if(passwordErrorStr==\"\"){validatePassword(password);}setNameError(nameErrorStr);setEmailError(emailErrorStr);setPasswError(passwordErrorStr);return nameErrorStr===\"\"&&emailErrorStr===\"\"&&passwordErrorStr===\"\";//returns true and validate() is executed\n};var validateName=function validateName(newName){//additonal: limiting input to the letters of the English alphabet, including capital letters\nif(!newName.match(/^[a-zA-Z][a-zA-Z\\s]*$/)){nameErrorStr=\"Enter only letters\";return false;}return true;};//additional: email formatting\nvar validateEmail=function validateEmail(newEmail){var emailFormat=/^\\w+@[a-zA-Z_]+?\\.[a-zA-Z]{2,4}$/;var isValidFormat=function isValidFormat(str){return str.match(emailFormat);};if(!isValidFormat(newEmail)){emailErrorStr=\"Oops! Invalid email.\";return false;}return true;};var validatePassword=function validatePassword(newPassword){if(newPassword.length==1||newPassword.length<8){passwordErrorStr=\"Password must be longer than that.\";return false;}return true;};//validation on onClick / Create Account button\nvar handleClick=function handleClick(e){if(validate()){setSuccessMessageVisible(true);//adding all new users, for \"All Data\"\nvar newUser={\"name\":name,\"email\":email,\"password\":password};setUsers(function(users){return users.concat(newUser);});}else{return;}};//FORM INPUT  \nvar handleNameChange=function handleNameChange(e){// setName(e.currentTarget.value); //if there's no letter validation\nvar newName=e.currentTarget.value;if(!newName||validateName(newName)){setName(newName);}};var handleEmailChange=function handleEmailChange(e){setEmail(e.currentTarget.value);};var handlePasswordChange=function handlePasswordChange(e){setPassword(e.currentTarget.value);};//firing when creating new account\nvar clearForm=function clearForm(){setName(\"\");setEmail(\"\");setPassword(\"\");setSuccessMessageVisible(false);};// ------------------------------------------------------\n//from DEPOSIT COMPONENT\nvar _useState17=useState(0.0),_useState18=_slicedToArray(_useState17,2),depositAmount=_useState18[0],setDepositAmount=_useState18[1];var _useState19=useState(0.0),_useState20=_slicedToArray(_useState19,2),balance=_useState20[0],setBalance=_useState20[1];var _useState21=useState(\"\"),_useState22=_slicedToArray(_useState21,2),depositError=_useState22[0],setDepositError=_useState22[1];var _useState23=useState([]),_useState24=_slicedToArray(_useState23,2),depositArr=_useState24[0],setDepositArr=_useState24[1];var depositErrorStr=\"\";//validating numbers for deposit and withdraw\nvar validateNr=function validateNr(newValue){//clear error when there's new input\nsetDepositError(\"\");setWithdrawError(\"\");if(!newValue.match(/^([(0-9)]+\\.)*([(0-9)]+)*$/)){//this regex matches numbers from 0 to 9 and + decimal numbers\ndepositErrorStr=\"Enter numbers only.\";setDepositError(depositErrorStr);return false;//didn't validate\n}return true;//did validate\n};//input\nvar handleChange=function handleChange(e){var newValue=e.target.value;if(validateNr(newValue)||!newValue){setDepositAmount(newValue);}else{e.target.value=newValue.slice(0,-1);//when we delete the numbers, it cuts off the last element if that's not a number\n}setSuccessMessageVisible(false);};//submit + additional validation \nvar submitDeposit=function submitDeposit(currentValue){if(currentValue==0.0){depositErrorStr=\"Amount must be higher than 0.\";setDepositError(depositErrorStr);setWithdrawSuccessMessageVisible(false);return;}if(currentValue.length>=7){depositErrorStr=\"Amount must be lower than that.\";setDepositError(depositErrorStr);setWithdrawSuccessMessageVisible(false);return;}//total amount / balance\nbalance+=parseFloat(currentValue);setBalance(balance);setSuccessMessageVisible(true);setDepositAmount(0.0);//all new deposits for \"All Data\"\nvar newDeposit={\"depositAmount\":depositAmount};setDepositArr(function(depositArr){return depositArr.concat(newDeposit);});};var showHideSuccessMessage=function showHideSuccessMessage(){if(successMessageVisible){return/*#__PURE__*/_jsx(\"div\",{className:\"message mt-4\",children:/*#__PURE__*/_jsx(\"h6\",{children:\"Your deposit was received!\"})});}return;};// ------------------------------------------------------\n//from WITHDRAW COMPONENT\nvar _useState25=useState(0.0),_useState26=_slicedToArray(_useState25,2),withdrawAmount=_useState26[0],setWithdrawAmount=_useState26[1];var _useState27=useState(\"\"),_useState28=_slicedToArray(_useState27,2),withdrawError=_useState28[0],setWithdrawError=_useState28[1];var _useState29=useState(false),_useState30=_slicedToArray(_useState29,2),withdrawSuccessMessageVisible=_useState30[0],setWithdrawSuccessMessageVisible=_useState30[1];var _useState31=useState([]),_useState32=_slicedToArray(_useState31,2),withdrawArr=_useState32[0],setWithdrawArr=_useState32[1];var withdrawErrorStr=\"\";//input\nvar withdrawHandleChange=function withdrawHandleChange(e){var newValue=e.target.value;if(validateNr(newValue)||!newValue){withdrawErrorStr=\"Enter numbers only.\";setWithdrawAmount(newValue);}else{e.target.value=newValue.slice(0,-1);//when we delete the numbers, it cuts off the last element if that's not a number\n}setWithdrawSuccessMessageVisible(false);};//submit + additional validation\nvar submitWithdrawal=function submitWithdrawal(currentValue){if(currentValue==0.0){withdrawErrorStr=\"Amount must be higher than 0.\";setWithdrawError(withdrawErrorStr);setWithdrawSuccessMessageVisible(false);return;}if(currentValue.length>=7){withdrawErrorStr=\"Amount must be lower than that.\";setWithdrawError(withdrawErrorStr);setWithdrawSuccessMessageVisible(false);return;}if(currentValue>balance){withdrawErrorStr=\"Amount higher than the account balance.\";setWithdrawError(withdrawErrorStr);setWithdrawSuccessMessageVisible(false);}else{setBalance(balance-parseFloat(currentValue));setWithdrawError(\"\");setWithdrawSuccessMessageVisible(true);setWithdrawAmount(0.0);//all withdrawals, for \"All Data\"\nvar newWithdraw={\"withdrawAmount\":withdrawAmount};setWithdrawArr(function(withdrawArr){return withdrawArr.concat(newWithdraw);});}};var showHideSuccessMessageWithdraw=function showHideSuccessMessageWithdraw(){if(withdrawSuccessMessageVisible){return/*#__PURE__*/_jsx(\"div\",{className:\"message mt-4\",children:/*#__PURE__*/_jsx(\"h6\",{children:\"Your withdrawal was succesful!\"})});}return;};var defaultContext={//state:\nname:name,email:email,password:password,nameError:nameError,emailError:emailError,passwError:passwError,depositAmount:depositAmount,balance:balance,depositError:depositError,successMessageVisible:successMessageVisible,withdrawSuccessMessageVisible:withdrawSuccessMessageVisible,withdrawAmount:withdrawAmount,withdrawError:withdrawError,users:users,depositArr:depositArr,withdrawArr:withdrawArr,//functions:\nvalidate:validate,handleClick:handleClick,handleNameChange:handleNameChange,handleEmailChange:handleEmailChange,handlePasswordChange:handlePasswordChange,clearForm:clearForm,validateNr:validateNr,handleChange:handleChange,submitDeposit:submitDeposit,showHideSuccessMessage:showHideSuccessMessage,withdrawHandleChange:withdrawHandleChange,submitWithdrawal:submitWithdrawal,showHideSuccessMessageWithdraw:showHideSuccessMessageWithdraw};return/*#__PURE__*/_jsx(MyContext.Provider,{value:defaultContext,children:children});}export{MyContext,MyContextProvider};","map":{"version":3,"sources":["/Users/sebestyenboglarka/git/badBank/src/MyContext.js"],"names":["React","createContext","useState","MyContext","MyContextProvider","children","successMessageVisible","setSuccessMessageVisible","name","setName","email","setEmail","password","setPassword","nameError","setNameError","emailError","setEmailError","passwError","setPasswError","users","setUsers","nameErrorStr","emailErrorStr","passwordErrorStr","validate","length","validateName","validateEmail","validatePassword","newName","match","newEmail","emailFormat","isValidFormat","str","newPassword","handleClick","e","newUser","concat","handleNameChange","currentTarget","value","handleEmailChange","handlePasswordChange","clearForm","depositAmount","setDepositAmount","balance","setBalance","depositError","setDepositError","depositArr","setDepositArr","depositErrorStr","validateNr","newValue","setWithdrawError","handleChange","target","slice","submitDeposit","currentValue","setWithdrawSuccessMessageVisible","parseFloat","newDeposit","showHideSuccessMessage","withdrawAmount","setWithdrawAmount","withdrawError","withdrawSuccessMessageVisible","withdrawArr","setWithdrawArr","withdrawErrorStr","withdrawHandleChange","submitWithdrawal","newWithdraw","showHideSuccessMessageWithdraw","defaultContext"],"mappings":"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","sourcesContent":["import React, {createContext, useState} from \"react\";\n\nconst MyContext = createContext();\n\nfunction MyContextProvider({children}) {\n\n    //from CREATE ACCOUNT COMPONENT\n    const [successMessageVisible, setSuccessMessageVisible] = useState(false); \n    const [name, setName] = useState(\"\");\n    const [email, setEmail] = useState(\"\");\n    const [password, setPassword] = useState(\"\");\n    const [nameError, setNameError] = useState(\"\");\n    const [emailError, setEmailError] = useState(\"\");\n    const [passwError, setPasswError] = useState(\"\");\n    const [users, setUsers] = useState([]);\n\n    let nameErrorStr = \"\";\n    let emailErrorStr = \"\";\n    let passwordErrorStr = \"\";\n\n\n    //NO INPUT + ADDITIONAL VALIDATION\n    const validate = () => {\n\t\t\tsetEmailError(\"\");\n\t\t\tsetNameError(\"\");\n\t\t\tsetPasswError(\"\")\n\n\t\t\tif (!email) {\n\t\t\t\t\temailErrorStr = \"Oops! Your email can't be blank.\";\n\t\t\t\t\t//additional: email length \n\t\t\t} else if (email.length == 1) {\n\t\t\t\t\temailErrorStr = \"Email must be longer than that.\";\n\t\t\t}\n\n\t\t\tif (!name) {\n\t\t\t\t\tnameErrorStr = \"Oops! Your name can't be blank.\";\n\t\t\t\t\t//additional: name length \n\t\t\t} else  if (name.length < 3) {\n\t\t\t\t\tnameErrorStr = \"Name must be longer than that.\";\n\t\t\t} \n\t\t\t\n\t\t\tif (!password) {\n\t\t\t\t\tpasswordErrorStr = \"Oops! Your password can't be blank.\";\n\t\t\t}\n\n\t\t\t//validate if there's no error message \n\t\t\tif (nameErrorStr == \"\") {\n\t\t\t\t\tvalidateName(name);\n\t\t\t}\n\n\t\t\tif (emailErrorStr == \"\") {\n\t\t\t\t\tvalidateEmail(email);\n\t\t\t}\n\t\t\t\n\t\t\tif (passwordErrorStr == \"\") {\n\t\t\t\t\tvalidatePassword(password);\n\t\t\t}\n\n\t\t\tsetNameError(nameErrorStr);\n\t\t\tsetEmailError(emailErrorStr);\n\t\t\tsetPasswError(passwordErrorStr);\n\t\t\treturn nameErrorStr === \"\" && emailErrorStr === \"\" && passwordErrorStr === \"\"; //returns true and validate() is executed\n    }; \n\n    const validateName = newName => {\n\t\t\t//additonal: limiting input to the letters of the English alphabet, including capital letters\n\t\t\t\t\tif(!newName.match(/^[a-zA-Z][a-zA-Z\\s]*$/)) {\n\t\t\t\t\tnameErrorStr = \"Enter only letters\";\n\t\t\t\t\treturn false;\n\t\t\t}\n\t\t\treturn true;\n    };\n\n    //additional: email formatting\n    const validateEmail = newEmail => {\n\t\t\tlet emailFormat = /^\\w+@[a-zA-Z_]+?\\.[a-zA-Z]{2,4}$/; \n\t\t\tlet isValidFormat = str => {\n\t\t\t\t\treturn str.match(emailFormat);\n\t\t\t}\n\n\t\t\tif (!isValidFormat(newEmail)) {\n\t\t\t\t\temailErrorStr = \"Oops! Invalid email.\";\n\t\t\t\t\treturn false;\n\t\t\t}\n\t\t\treturn true;\n    };\n\n    const validatePassword = newPassword => {\n\t\t\tif (newPassword.length == 1 || newPassword.length < 8) {\n\t\t\t\t\tpasswordErrorStr = \"Password must be longer than that.\";\n\t\t\t\t\treturn false;\n\t\t\t}\n\t\t\treturn true;\n    };\n\n    //validation on onClick / Create Account button\n    const handleClick = e => {\n\t\t\tif (validate()) { \n\t\t\t\t\tsetSuccessMessageVisible(true); \n\t\t\t\t\t//adding all new users, for \"All Data\"\n\t\t\t\t\tlet newUser = {\n\t\t\t\t\t\t\t\"name\": name,\n\t\t\t\t\t\t\t\"email\": email,\n\t\t\t\t\t\t\t\"password\": password\n\t\t\t\t\t};\n\t\t\t\t\tsetUsers(users => users.concat(newUser));\n\t\t\t} else {\n\t\t\treturn;\n\t\t\t}\n    };\n\n    //FORM INPUT  \n    const handleNameChange = e => {\n\t\t\t// setName(e.currentTarget.value); //if there's no letter validation\n\t\t\tlet newName = e.currentTarget.value;\n\t\t\tif (!newName || validateName(newName)) {\n\t\t\t\t\tsetName(newName);\n\t\t\t}\n    };\n\n    const handleEmailChange = e => {\n      setEmail(e.currentTarget.value);\n    };\n\n    const handlePasswordChange = e => {        \n      setPassword(e.currentTarget.value);\n    };\n\n    //firing when creating new account\n    const clearForm = () => {\n\t\t\tsetName(\"\");\n\t\t\tsetEmail(\"\");\n\t\t\tsetPassword(\"\");\n\t\t\tsetSuccessMessageVisible(false);\n    };\n\n\n    // ------------------------------------------------------\n\n    //from DEPOSIT COMPONENT\n    let [depositAmount, setDepositAmount] = useState(0.0);\n    let [balance, setBalance] = useState(0.0);\n    let [depositError, setDepositError] = useState(\"\");\n    let [depositArr, setDepositArr] = useState([]);\n    \n    let depositErrorStr = \"\";\n\n    //validating numbers for deposit and withdraw\n    const validateNr = newValue => {\n\t\t\t//clear error when there's new input\n\t\t\tsetDepositError(\"\");\n\t\t\tsetWithdrawError(\"\");\n\n\t\t\tif(!newValue.match(/^([(0-9)]+\\.)*([(0-9)]+)*$/)) { //this regex matches numbers from 0 to 9 and + decimal numbers\n\t\t\t\t\tdepositErrorStr = \"Enter numbers only.\";\n\t\t\t\t\tsetDepositError(depositErrorStr);\n\t\t\t\t\treturn false; //didn't validate\n\t\t\t} \n\t\t\treturn true; //did validate\n    };\n\n    //input\n    const handleChange = e => {\n\t\t\tlet newValue = e.target.value;\n\t\t\tif (validateNr(newValue) || !newValue) { \n\t\t\t\t\tsetDepositAmount(newValue);\n\t\t\t} else {\n\t\t\t\t\t\te.target.value = newValue.slice(0, -1); //when we delete the numbers, it cuts off the last element if that's not a number\n\t\t\t}     \n\t\t\t\tsetSuccessMessageVisible(false);   \n    };\n\n    //submit + additional validation \n    const submitDeposit = currentValue => {\n\t\t\tif (currentValue == 0.0) {\n\t\t\t\t\tdepositErrorStr = \"Amount must be higher than 0.\";\n\t\t\t\t\tsetDepositError(depositErrorStr);\n\t\t\t\t\tsetWithdrawSuccessMessageVisible(false);\n\t\t\t\t\treturn;\n        }\n\n\t\t\tif (currentValue.length >= 7) {\n\t\t\t\tdepositErrorStr = \"Amount must be lower than that.\";\n\t\t\t\tsetDepositError(depositErrorStr);\n\t\t\t\tsetWithdrawSuccessMessageVisible(false);\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t//total amount / balance\n\t\t\tbalance += parseFloat(currentValue);\n\t\t\tsetBalance(balance);\n\t\t\tsetSuccessMessageVisible(true);\n\t\t\tsetDepositAmount(0.0)\n\n\t\t\t//all new deposits for \"All Data\"\n\t\t\tlet newDeposit = {\n\t\t\t\t\"depositAmount\": depositAmount\n\t\t\t};\n\n\t\t\tsetDepositArr(depositArr => depositArr.concat(newDeposit));\n    };\n\n    let showHideSuccessMessage = () => {\n\t\t\tif (successMessageVisible) {\n\t\t\t\treturn (\n\t\t\t\t\t<div className=\"message mt-4\">\n\t\t\t\t\t\t\t<h6>Your deposit was received!</h6>\n\t\t\t\t\t</div>\n\t\t\t\t)\n\t\t\t}\n\t\t\treturn;\n    };\n\n    // ------------------------------------------------------\n\n    //from WITHDRAW COMPONENT\n    let [withdrawAmount, setWithdrawAmount] = useState(0.0);\n    let [withdrawError, setWithdrawError] = useState(\"\");\n    const [withdrawSuccessMessageVisible, setWithdrawSuccessMessageVisible] = useState(false); \n    let [withdrawArr, setWithdrawArr] = useState([]);\n\n    let withdrawErrorStr = \"\";\n\n    //input\n    const withdrawHandleChange = e => {\n\t\t\tlet newValue = e.target.value;\n\t\t\tif (validateNr(newValue) || !newValue) { \n\t\t\t\twithdrawErrorStr = \"Enter numbers only.\" \n\t\t\t\tsetWithdrawAmount(newValue);\n\t\t\t} else {\n\t\t\t\te.target.value = newValue.slice(0, -1); //when we delete the numbers, it cuts off the last element if that's not a number\n\t\t\t} \n\t\t\tsetWithdrawSuccessMessageVisible(false);   \n    };\n\n    //submit + additional validation\n     const submitWithdrawal = currentValue => {\n\t\t\tif (currentValue == 0.0) {\n\t\t\t\twithdrawErrorStr = \"Amount must be higher than 0.\";\n\t\t\t\tsetWithdrawError(withdrawErrorStr);\n\t\t\t\tsetWithdrawSuccessMessageVisible(false);\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tif (currentValue.length >= 7) {\n\t\t\t\twithdrawErrorStr = \"Amount must be lower than that.\";\n\t\t\t\tsetWithdrawError(withdrawErrorStr);\n\t\t\t\tsetWithdrawSuccessMessageVisible(false);\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tif (currentValue > balance) {\n\t\t\t\twithdrawErrorStr = \"Amount higher than the account balance.\";\n\t\t\t\tsetWithdrawError(withdrawErrorStr);\n\t\t\t\tsetWithdrawSuccessMessageVisible(false);\n\t\t\t} else {\n\t\t\t\tsetBalance(balance - parseFloat(currentValue));\n\t\t\t\tsetWithdrawError(\"\");\n\t\t\t\tsetWithdrawSuccessMessageVisible(true);\n\t\t\t\tsetWithdrawAmount(0.0)\n\t\t\t\t\n\t\t\t\t//all withdrawals, for \"All Data\"\n\t\t\t\tlet newWithdraw = {\n\t\t\t\t\t\"withdrawAmount\": withdrawAmount\n\t\t\t\t};\n\n\t\t\t\tsetWithdrawArr(withdrawArr => withdrawArr.concat(newWithdraw));\n\t\t\t}\n  \t};\n\n    let showHideSuccessMessageWithdraw = () => {\n\t\t\tif (withdrawSuccessMessageVisible) {\n\t\t\t\t\treturn (\n\t\t\t\t\t\t<div className=\"message mt-4\">\n\t\t\t\t\t\t\t<h6>Your withdrawal was succesful!</h6>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t)\n\t\t\t}\n\t\t\treturn;\n    };\n\n\n    const defaultContext = {\n\t\t\t//state:\n\t\t\tname,\n\t\t\temail,\n\t\t\tpassword,\n\t\t\tnameError,\n\t\t\temailError,\n\t\t\tpasswError,\n\t\t\tdepositAmount,\n\t\t\tbalance,\n\t\t\tdepositError,\n\t\t\tsuccessMessageVisible,\n\t\t\twithdrawSuccessMessageVisible,\n\t\t\twithdrawAmount,\n\t\t\twithdrawError,\n\t\t\tusers,\n\t\t\tdepositArr,\n\t\t\twithdrawArr,\n\t\t\t//functions:\n\t\t\tvalidate,\n\t\t\thandleClick,\n\t\t\thandleNameChange,\n\t\t\thandleEmailChange,\n\t\t\thandlePasswordChange,\n\t\t\tclearForm,\n\t\t\tvalidateNr,\n\t\t\thandleChange,\n\t\t\tsubmitDeposit,\n\t\t\tshowHideSuccessMessage,\n\t\t\twithdrawHandleChange,\n\t\t\tsubmitWithdrawal,\n\t\t\tshowHideSuccessMessageWithdraw\n    };\n\n    return (\n      <MyContext.Provider value={defaultContext}>\n        {children}\n      </MyContext.Provider>\n    )\n}\n\nexport {MyContext, MyContextProvider};\n"]},"metadata":{},"sourceType":"module"}